# Test Set 5: BPSEC ADM Tests.
#
# TC 5.1: Report BPSEC Metrics
# TC 5.2: Manipulate Keys
# TC 5.3: Manipulate BIB Rules
# TC 5.4: Manipulate BCB Rules
# TC 5.5: Periodic Re-Key
# TC 5.6: Rekey on number blocks
# TC 5.7: Rekey on integrity failure

###############################################################################
# TC 5.1 Report BPSEC Metrics
###############################################################################
# Generate various reports from the Agent
#
###############################################################################

#------------------------------------------------------------------------------
# Step 5.1.1: Generate a full BPSEC report.
#------------------------------------------------------------------------------
c3040109030215170501822b0100020100

#------------------------------------------------------------------------------
# Step 5.1.2: Verify report is received and list known sources.
#------------------------------------------------------------------------------

#------------------------------------------------------------------------------
# Step 5.1.3: Generate BPSEC SRC Report for "~" (i.e., bad source)
#------------------------------------------------------------------------------
c3040109030215170b01c22b0101020112027e00020100

#------------------------------------------------------------------------------
# Step 5.1.4: Verify report with 0 items is received.
#------------------------------------------------------------------------------

#------------------------------------------------------------------------------
# Step 5.1.5: Generate BPSEC SRC Report for appropriate source:
# Source: ipn:1.2
#------------------------------------------------------------------------------
c3040109030215171101c22b01010201120869706e3a312e3200020100

#------------------------------------------------------------------------------
# Source: ipn:3.1
#------------------------------------------------------------------------------
#c3040109030215171101c22b01010201120869706e3a332e3100020100

#------------------------------------------------------------------------------
# Step 5.1.6: Verify source report received.
#------------------------------------------------------------------------------

WAIT 10

###############################################################################
# TC 5.2 Manipulate Keys
###############################################################################
# Add, view, and remove keys on the Agent.
#
###############################################################################


#------------------------------------------------------------------------------
# Step 5.2.1: List all known keys on the Agent
#------------------------------------------------------------------------------
c30401090302151705018029011a020100

#------------------------------------------------------------------------------
# Step 5.2.2: Manual Add Key:  Add "testkey1" with value DEADBEEFDEADBEEF
#------------------------------------------------------------------------------
c32c01030302121309746573746b657931000908deadbeefdeadbeef

#------------------------------------------------------------------------------
# Step 5.2.3: Key from File: Add filekey1 and take contents from filekey1.bin
# Note: This must be done from the text interface if you want to read in from
#       a file. Otherwise, a command with sample contents from a file is
#       provided below.
#------------------------------------------------------------------------------
#c32c0103030212130966696c656b657931006665004104739488d57384f9e3b82d7f72bd9e9bbbdbdfef820900ae58864554754700508898c656d85de604350373a2f08d866507b89db240b5adc4433d453eb4f28862b401209e154881e5968c53d981b4c6e5dc22c016cd8d107accf9de6cf7274a4367c04d

#------------------------------------------------------------------------------
# Step 5.2.4: List all known keys on Agent and verify testkey1 and filekey1 appear
#------------------------------------------------------------------------------
c30401090302151705018029011a020100

#------------------------------------------------------------------------------
# Step 5.2.5: Remove Key: Remove "testkey1"
#------------------------------------------------------------------------------
c32c010202011209746573746b65793100

#------------------------------------------------------------------------------
# Step 5.2.6: List all known keys on Agent and verify testkey1 does not appear.
#------------------------------------------------------------------------------
c30401090302151705018029011a020100

#------------------------------------------------------------------------------
# Step 5.2.7: Try to remove "testkey1" again to show no issue.
#------------------------------------------------------------------------------
c32c010202011209746573746b65793100


WAIT 10

###############################################################################
# TC 5.3: Manipulate BIB Rules
###############################################################################
# Add, view, and remove BIB rules on the Agent.
#
# PreCondition 1: No BIB Rules are defined on the agent.
#                 This may require a change to the ionstart rc file
#                 Or list and then delete any BIB rules in the system first.
###############################################################################


#------------------------------------------------------------------------------
# Step 5.3.1: List all known BIB rules on the Agent.
#------------------------------------------------------------------------------
832c0106

#------------------------------------------------------------------------------
# Step 5.3.2: Make sure there are no BIB rules listed on the Agent.
#------------------------------------------------------------------------------

#------------------------------------------------------------------------------
# Step 5.3.3: Add a new BIB rule: 
#------------------------------------------------------------------------------
# SRC: ipn:3.~
# DEST: ipn:1.~
# TGT: 1
# CS: BIB-ECDSA-SHA256
# KEY: filekey1
#------------------------------------------------------------------------------
c32c0104060512120a12120869706e3a332e7e000869706e3a312e7e000401000000114249422d45434453412d534841323536000966696c656b65793100

#------------------------------------------------------------------------------
# Step 5.3.4: List all known BIB rules on the Agent.
# Verify that the just-added BIB rule is listed.
#------------------------------------------------------------------------------
832c0106

#------------------------------------------------------------------------------
# Step 5.3.5: Remove the new BIB rule:
#------------------------------------------------------------------------------
# SRC: ipn:3.~
# DEST: ipn:1.~
# TGT: 1
# CS: BIB-ECDSA-SHA256
# KEY: filekey1
#------------------------------------------------------------------------------
c32c0105040312120a0869706e3a332e7e000869706e3a312e7e000401000000

#------------------------------------------------------------------------------
# Step 5.3.6: List all known BIB rules on the Agent.
# Verify that the just-deleted BIB rule is no longer listed.
#------------------------------------------------------------------------------
832c0106


WAIT 10

###############################################################################
# TC 5.4: Manipulate BCB Rules
###############################################################################
# Add, view, and remove BCB rules on the Agent.
#
# Precondition 1: Key sha256_aes256 is configured on the Agent.
# Precondition 2: BCB-SHA256_AES256 is supported by the Agent.
###############################################################################


#------------------------------------------------------------------------------
# Step 5.4.1: List all known BCB rules on the Agent.
#------------------------------------------------------------------------------
832c0109

#------------------------------------------------------------------------------
# Step 5.4.2: Make sure there are no BCB rules listed on the Agent.
#------------------------------------------------------------------------------

#------------------------------------------------------------------------------
# Step 5.4.3: Add a new BCB rule: 
#------------------------------------------------------------------------------
# SRC: ipn:3.~
# DEST: ipn:1.~
# TGT: 1
# CS: BCB-SHA384-AES256
# KEY: sha384_aes256
#------------------------------------------------------------------------------
c32c0107060512120a12120869706e3a332e7e000869706e3a312e7e000401000000124243422d5348413338342d414553323536000e7368613338345f61657332353600


#------------------------------------------------------------------------------
# Step 5.4.4: List all known BCB rules on the Agent.
# Verify that the just-added BCB rule is listed.
#------------------------------------------------------------------------------
832c0109

#------------------------------------------------------------------------------
# Step 5.4.5: Remove the new BCB rule:
#------------------------------------------------------------------------------
# SRC: ipn:3.~
# DEST: ipn:1.~
# TGT: 1
#------------------------------------------------------------------------------
c32c0108040312120a0869706e3a332e7e000869706e3a312e7e000401000000

#------------------------------------------------------------------------------
# Step 5.4.6: List all known BCB rules on the Agent.
# Verify that the just-deleted BCB rule is no longer listed.
#------------------------------------------------------------------------------
832c0109

WAIT 10

###############################################################################
# TC 5.5: Time-Based Security Policy
###############################################################################
# Use time-based rules to change BIB rules in the system for bundles going
# from ipn:1.~ to ipn:3.~
#
# Summary: 
#  - Load test keys into the system for two kinds of integrity, HMAC and ECDSA
#  - Define Macros to switch to HMAC or switch to ECDSA.
#  - Define a TRL to use HMAC
#  - Define a TRL to, later, switch to ECDSA, and set a countdown timer to switch
#    back to HMAC at a later date.
#  - Define a TRL to generate reports throughout the testcase to track which
#    BIB rule is enacted.
#
# Note:
#  - This test case may generate control warnings. This happens when a macro
#    tries to delete a rule that does not exist. This is not an error, as
#    trying to delete a BIB rule that does not exist is not an error.
###############################################################################

#------------------------------------------------------------------------------
# Step 5.5.1 Add testkey1, an HMAC-SHA-256 key
#------------------------------------------------------------------------------
c32c01030302121309746573746b657931001514eded11fc176bcca3d20c53d8b792ad514f1fe580


#------------------------------------------------------------------------------
# Step 5.5.2 Add testkey2, an ECDSA-SHA-384 key.
#------------------------------------------------------------------------------
c32c01030302121309746573746b65793200811781150061044dc4f977ae4ac4bb40cf2ca2ec115dff1356b4af7165b63e6b8fc1955b7d5f922bed1b4dc8960b659c77e409a8efecd40cb1d5458eb0d6f1f487f346cf71c8936158b53871a957aac2b44155384554ae53662c35150426a3ee28c66b52319df80130e4fb8fa95ee7ef78640ec45827bc04f57c9ded1677e259b3ec73d027dccef12aaf9087c6ba85bac16127b0d3cc7e22b4


#------------------------------------------------------------------------------
# Step 5.5.3 Create Macro M3 to use HMAC-SHA-256 with testkey1
#------------------------------------------------------------------------------
# Macro M3 MID will be 1601030A0B0C
# It will have 2 controls:
# Ctrl 1: DelBibRule(ipn:1.~, ipn:3.~, 1)
# Ctrl 1: AddBibRule(ipn:1.~, ipn:3.~, 1, BIB-HMAC-SHA256, testkey1)
#------------------------------------------------------------------------------
c304010a0403121415034d3300061601030a0b0c5e02c32c0105040312120a0869706e3a312e7e000869706e3a332e7e000401000000c32c0104060512120a12120869706e3a312e7e000869706e3a332e7e000401000000104249422d484d41432d5348413235360009746573746b65793100

#------------------------------------------------------------------------------
# Step 5.5.4 Create Macro M4 to use ECDSA-SHA384 with testkey2
#------------------------------------------------------------------------------
# Macro M4 MID will be 160103DDEEFF
# It will have 3 Controls
# Ctrl 1: DelBibRule(ipn:1.~, ipn:3.~, 1)
# Ctrl 2: AddBibRule(ipn:1.~, ipn:3.~, 1, BIB-ECDSA-SHA384, testkey2)
# Ctrl 3: AddTRL(TRL4, 60, 1, 1, {M3})
#         NOTE: TRL4 MID will be: 150102AABB
#------------------------------------------------------------------------------
c304010a0403121415034d340006160103ddeeff7e03c32c0105040312120a0869706e3a312e7e000869706e3a332e7e000401000000c32c0104060512120a12120869706e3a312e7e000869706e3a332e7e000401000000114249422d45434453412d5348413338340009746573746b65793200c304010e0605141010101505150102aabb013c0101010107011601030a0b0c


#------------------------------------------------------------------------------
# Step 5.5.5: List BPSEC Keys and make sure testkey1 and testkey2 are defined
#------------------------------------------------------------------------------
c30401090302151705018029011a020100

#------------------------------------------------------------------------------
# Step 5.5.6: List Macros and make sure Agent has M3 and M4.
#------------------------------------------------------------------------------
8304010c

#------------------------------------------------------------------------------
# Step 5.5.7: Make a TRL which will wait 20 seconds and then generate a
#             BPSEC BIB Rule Listing every 60 seconds for 3 times.
# TRL7 MID will be 150102EDED
# AddTRL(TRL7, 20, 60, 5, {ListBibRules}
#------------------------------------------------------------------------------
c304010e0605141010101505150102eded0114013c01050501832c0106

#------------------------------------------------------------------------------
# Step 5.5.8: Create TRL to start security and ECDSA timer.
# NOTE: Do this within 15 seconds of running Step 5.5.7 above.
#------------------------------------------------------------------------------
# TRL5 MID will be 150102CCDD
# TRL6 MID will be 150102EEFF
# AddTRL(TRL5, 0, 1, 1, {M3, AddTRL(TRL6, 60, 1, 1, {M4})}
#------------------------------------------------------------------------------
c304010e0605141010101505150102ccdd01000101010126021601030a0b0cc304010e0605141010101505150102eeff013c010101010701160103ddeeff

#------------------------------------------------------------------------------
# Step 5.5.9: Evaluate 5 returned reports from TRL 7
#------------------------------------------------------------------------------
# Report 1 from TRL 7 should show BIB rule for HMAC-SHA256 as changed by Macro M3
# Report 2 from TRL 7 should show BIB rule for ECDSA-SHA384 as changed by Macro M4
# Report 3 from TRL 7 should show BIB rule for HMAC-SHA256 as changed back by Macro M3
# Report 4 from TRL 7 should show BIB rule for HMAC-SHA256, unchanged.
# Report 5 from TRL 7 should show BIB rule for HMAC-SHA256, unchanged.
#------------------------------------------------------------------------------

#------------------------------------------------------------------------------
# Step 5.5.10: Delete key testkey1 
#------------------------------------------------------------------------------
c32c010202011209746573746b65793100

#------------------------------------------------------------------------------
# Step 5.5.11: Delete key testkey2 
#------------------------------------------------------------------------------
c32c010202011209746573746b65793200

#------------------------------------------------------------------------------
# Step 5.5.12: Delete Macros M3 and M4.
#------------------------------------------------------------------------------
0xc304010b0201150d021601030a0b0c160103ddeeff


#------------------------------------------------------------------------------
# Step 5.5.13: List BPSEC Keys and make sure testkey1 and testkey2 are gone
#------------------------------------------------------------------------------
c30401090302151705018029011a020100

#------------------------------------------------------------------------------
# Step 5.5.14: List Macros and make sure M3 and M4 are gone.
#------------------------------------------------------------------------------
8304010c


###############################################################################
# TC 5.6: Rekey on Integrity Failure
###############################################################################
# 
# If the number of failed BIB blocks received by ipn:1.1 > 5 
# switch to key "default key"
#
# Summary:
# - Setup BIB integrity for HMAC-SHA256 between ipn:1.1 and ipn:3.1 using
#   a test key
# - Change ipn:1.1 to use default key, different from test key.
# - ipn:3.1 will fail integrity checks. After 5, SRL will fire to change
#   ipn:3.1 to use the default key.
# - Message traffic should flow again from ipn:1.1 to ipn:3.1
###############################################################################

#<Test case not implemented yet.>

###############################################################################
# TC 5.7: Rekey on number of blocks
###############################################################################
# If the number of received BIB blocks is > 10, switch to using a new key.
# 
# Summary:
# - Setup BIB integrity for HMAC-SHA256 between ipn:1.1 and ipn:3.1 using
#   a test key.
# - Setup SRL on ipn:3.1 to change to a default key after receiving and
#   successfully validating 10 blocks
# - Send 11 blocks to ipn:3.1.  Verify only 10 are received.
# - Change ipn:1.1 to use default key.
# - Verify sending works again.
###############################################################################

#<Test case not implemented yet.>

